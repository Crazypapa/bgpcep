/**
* Generated file

* Generated from: yang module name: bgp-rib-impl  yang module local name: bgp-proposal-impl
* Generated by: org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator
* Generated at: Wed Nov 06 13:02:32 CET 2013
*
* Do not modify this file unless it is present under src/main directory
*/
package org.opendaylight.controller.config.yang.bgp.rib.impl;

import java.net.InetAddress;
import java.net.UnknownHostException;

import org.opendaylight.controller.config.api.JmxAttributeValidationException;
import org.opendaylight.protocol.bgp.rib.impl.BGPSessionProposalImpl;
import org.opendaylight.protocol.bgp.rib.impl.spi.BGPSessionPreferences;
import org.opendaylight.protocol.bgp.rib.impl.spi.BGPSessionProposal;
import org.opendaylight.protocol.concepts.ASNumber;
import org.opendaylight.protocol.concepts.IPv4Address;

/**
*
*/
public final class BGPSessionProposalImplModule extends org.opendaylight.controller.config.yang.bgp.rib.impl.AbstractBGPSessionProposalImplModule
{

    public BGPSessionProposalImplModule(org.opendaylight.controller.config.api.ModuleIdentifier name, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver) {
        super(name, dependencyResolver);
    }

    public BGPSessionProposalImplModule(org.opendaylight.controller.config.api.ModuleIdentifier name, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, BGPSessionProposalImplModule oldModule, java.lang.AutoCloseable oldInstance) {
        super(name, dependencyResolver, oldModule, oldInstance);
    }

    @Override
    public void validate(){
        super.validate();
		JmxAttributeValidationException.checkNotNull(getBgpId(),
				"value is not set.", bgpIdJmxAttribute);
		JmxAttributeValidationException.checkCondition(isValidIPv4Address(getBgpId()),
				"value " + getBgpId() + " is not valid IPv4 address", bgpIdJmxAttribute);
		
		JmxAttributeValidationException.checkNotNull(getAsNumber(),
				"value is not set.", asNumberJmxAttribute);
    }

    @Override
    public java.lang.AutoCloseable createInstance() {
		try {
			final ASNumber as = new ASNumber(getAsNumber());
			final InetAddress byName = InetAddress.getByName(getBgpId());
			final IPv4Address bgpId = new IPv4Address(byName);
			final BGPSessionProposalImpl bgpSessionProposal = new BGPSessionProposalImpl(getHoldtimer(), as, bgpId);
			return new BgpSessionProposalCloseable(bgpSessionProposal);
		} catch (UnknownHostException e) {
			throw new RuntimeException("Unable to parse ip address " + getBgpId(), e);
		}
	}

	private static final class BgpSessionProposalCloseable implements BGPSessionProposal, AutoCloseable {

		private final BGPSessionProposalImpl inner;

		public BgpSessionProposalCloseable(BGPSessionProposalImpl bgpSessionProposal) {
			this.inner = bgpSessionProposal;
		}

		@Override
		public void close() throws Exception {
			// NOOP
		}

		@Override
		public BGPSessionPreferences getProposal() {
			return inner.getProposal();
		}
	}
	
	private boolean isValidIPv4Address(String address) {
		try {
			new IPv4Address(InetAddress.getByName(address));	
		} catch(UnknownHostException | IllegalArgumentException e) {
			return false;	
		}
		return true;
	}
}
